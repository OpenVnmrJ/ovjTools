# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Copyright (C) 2016  Michael Tesch
#
# You may distribute under the terms of either the GNU General Public
# License or the Apache License, as specified in the LICENSE file.
#
# For more information, see the LICENSE file.
#

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"
  #config.vm.box_version = "v20160919.0.0"
  #config.vm.box = "chad-thompson/ubuntu-trusty64-gui"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the sync'd folder because often the VB guest additions are inoperable.
  # And so far nothing in the OpenVnmrJ build requires the cross-mount.
  # If your VirtualBox guest additions are correct, you can re-enable this.
  config.vm.synced_folder '.', '/vagrant', disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    #vb.gui = true
    
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    export DEBIAN_FRONTEND=noninteractive
    dpkg --add-architecture i386
    apt-get -qq update
    apt-get -qq -y dist-upgrade

    # these are needed to build
    apt-get install -y git scons
    apt-get install -y fort77 g++
    apt-get install -y lib32stdc++-4.8-dev libc6-dev-i386 libglu1-mesa-dev
    apt-get install -y libmotif-dev:i386 libx11-dev:i386 libxt-dev:i386

    # these are needed to install
    apt-get install -y openjdk-6-jre csh expect tcl8.4-dev tk8.4-dev
    apt-get install -y rsh-server tftpd mutt sharutils gnome-power-manager k3b kdiff3 rarpd

    #debconf-set-selections <<< "postfix postfix/mailname string your.hostname.com"
    #debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
    apt-get install -y ghostscript imagemagick postgresql
    apt-get install -y sendmail-cf
    chmod a+rw /var/run/postgresql

    apt-get install -y gdm
    #dpkg-reconfigure gdm

    #add-apt-repository -y ppa:webupd8team/java
    #apt-get -qq update
    #apt-get install -y debconf-utils
    #debconf-set-selections <<< "oracle-java6-installer shared/accepted-oracle-license-v1-1 select true"
    #apt-get install -y oracle-java6-installer
    #apt-get install -y oracle-java6-set-default
    #update-java-alternatives -s java-6-oracle
    #java -version
  SHELL

  #config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"
  #config.vm.provision "file", source: ENV["ovjBuildDir"], destination: "ovjbuild"

end
